@model Blog.Web.Models.ViewModels.AddBlogPostRequest
@{
    ViewData["Title"] = "Add Blog Post";
}

<!-- heading, py-2 for padding on y axis -->
<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Add New BlogPost - Admin Functionality</h1>
    </div>
</div>

<div class="container py-5">

    <form method="post">

        <div class="mb-3">
            <label class="form-label">Heading</label>
            <input type="text" class="form-control" id="heading" asp-for="Heading"/>
        </div>

        <div class="mb-3">
            <label class="form-label">Page Title</label>
            <input type="text" class="form-control" id="pageTitle" asp-for="PageTitle" />
        </div>

        <div class="mb-3">
            <label class="form-label">Content</label>
            <textarea class="form-control" id="content" asp-for="Content"></textarea>
        </div>

        <div class="mb-3">
            <label class="form-label">Short Description</label>
            <input type="text" class="form-control" id="shortDescription" asp-for="ShortDescription" />
        </div>

        <!-- We send image to Cloudinary, get its URL back -->
        <div class="mb-3">
            <label class="form-label">Featured Image Upload</label>
            <input type="file" id="featuredImageUpload" class="form-control"/>

            <!-- display thumbnail of image  -->
            <img src="" id="featuredImageDisplay"  style="display:none; width: 300px;"/>
        </div>

        <div class="mb-3">
            <label class="form-label">Featured Image URL</label>
            <input type="text" class="form-control" id="featuredImageUrl" asp-for="FeatureImageURL" />
        </div>

        <div class="mb-3">
            <label class="form-label">URL Handle</label>
            <input type="text" class="form-control" id="urlHandle" asp-for="UrlHandle" />
        </div>

        <div class="mb-3">
            <label class="form-label">Date</label>
            <input type="date" class="form-control" id="publishedDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" asp-for="PublishedDate"/>
        </div>

        <div class="mb-3">
            <label class="form-label">Author</label>
            <input type="text" class="form-control" id="author" asp-for="Author" />
        </div>

        <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" id="visible" asp-for="Visible">
            <label class="form-check-label" >
                Is Visible?
            </label>
        </div>

        <div class="mb-3">
            <label class="form-label">Tags</label>
            <!-- select for selectlist -->
            <!-- asp-items to select what to include in list (Model.Tags is IEnumerable Tag in AddBlogPostRequest) -->
            <select class="form-select" asp-items="@Model.Tags" asp-for="SelectedTags">
            </select>
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-dark">Save</button>
        </div>

    </form>
</div>

<!-- Javascript for text editor -->
@section Scripts{
    <script>
        //initialize FroalaEditor
        //in (), give id we want to convert into editor (content in this case)
        var editor = new FroalaEditor('#content', {
            imageUploadURL: '/api/images'
        });
        //by setting imageUploadURL to /api/images, it calls httppost of imagesController

        //for featured image upload
        //eventlistener, listen to featured image upload change
        var featuredUploadElement = document.getElementById('featuredImageUpload');

        //featuredImageURL
        var featuredImageURLElement = document.getElementById('featuredImageUrl');

        //for thumbnail
        var imageThumbnail = document.getElementById('featuredImageDisplay');

        async function uploadFeaturedImage(e){

            let data = new FormData();
            data.append('file', e.target.files[0]);

            //now upload this data using fetch
            //uses POST, accept everything
            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Accept': '*/*'
                },
                body: data
            }).then(response => response.json())    //convert response to json
                .then(result => {   //result has link to image in cloudinary 

                    //so change value of featuredImageURL with cloudinary link
                    featuredImageURLElement.value = result.link;
                    imageThumbnail.src = result.link;
                    imageThumbnail.style.display = 'block'; //display to screen
                });

        }

        //Listens to featuredImageUpload and when it change, call function
        featuredUploadElement.addEventListener('change', uploadFeaturedImage); 

    </script>
}