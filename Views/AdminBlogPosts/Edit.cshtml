@* Use EditBlogPostRequest model received from AdminBlogPostsController Edit function, fill out div asp-for  *@
@model Blog.Web.Models.ViewModels.EditBlogPostRequest

@{
    ViewData["Title"] = "Edit Blog Post";
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Edit BlogPost - Admin Functionality</h1>
    </div>
</div>

<div class="container py-5">
    <!-- Display alert message -->
    @if (TempData["AlertMessage"] != null)
    {
        <div class="alert alert-danger">
            <strong>Failed </strong>@TempData["AlertMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" style="float: right">
            </button>
        </div>
    }

    @if (Model != null)
    {
        <form method="post">
            <div class="mb-3">
                <label class="form-label">Id</label>
                <input type="text" class="form-control" id="id" asp-for="Id" readonly /> <!-- read only b/c we don't want user to change it-->
            </div>
            <div class="mb-3">
                <label class="form-label">Heading</label>
                <input type="text" class="form-control" id="heading" asp-for="Heading" />
            </div>

            <div class="mb-3">
                <label class="form-label">Page Title</label>
                <input type="text" class="form-control" id="pageTitle" asp-for="PageTitle" />
            </div>

            <div class="mb-3">
                <label class="form-label">Content</label>
                <textarea class="form-control" id="content" asp-for="Content"></textarea>
            </div>

            <div class="mb-3">
                <label class="form-label">Short Description</label>
                <input type="text" class="form-control" id="shortDescription" asp-for="ShortDescription" />
            </div>

            <div class="mb-3">
                <label class="form-label">Featured Image Upload</label>
                <input type="file" id="featuredImageUpload" class="form-control" />

                <!-- display thumbnail of image  -->
                @if (Model.FeatureImageURL != null)
                {
                    //if not null, display image
                    <img src="@Model.FeatureImageURL" id="featuredImageDisplay" style="display:block; width: 300px;" />
                }
                else
                {   // don't display
                    <img src="" id="featuredImageDisplay" style="display:none; width: 300px;" />
                }
            </div>

            <div class="mb-3">
                <label class="form-label">Featured Image URL</label>
                <input type="text" class="form-control" id="featuredImageUrl" asp-for="FeatureImageURL" />
            </div>

            <div class="mb-3">
                <label class="form-label">URL Handle</label>
                <input type="text" class="form-control" id="urlHandle" asp-for="UrlHandle" />
            </div>

            <div class="mb-3">
                <label class="form-label">Date</label>
                <input type="date" class="form-control" id="publishedDate" asp-for="PublishedDate" />
            </div>

            <div class="mb-3">
                <label class="form-label">Author</label>
                <input type="text" class="form-control" id="author" asp-for="Author" />
            </div>

            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="visible" asp-for="Visible">
                <label class="form-check-label">
                    Is Visible?
                </label>
            </div>

            <div class="mb-3">
                <label class="form-label">Tags</label>
                <!-- select for selectlist -->
                <!-- asp-items to select what to include in list (Model.Tags is IEnumerable Tag in AddBlogPostRequest) -->
                <select class="form-select" 
                    asp-items="@Model.Tags" 
                    asp-for="SelectedTags">
                </select>
            </div>
            <div class="mb-3 d-flex">
                <!-- Since we're currently in edit page (GET), don't have to put asp-action (for POST) -->
                <!-- But when delete, use asp-action b/c it's POST -->
                <button type="submit" class="btn btn-dark me-2">Update</button>
                <button type="submit" class="btn btn-danger"
                    asp-area=""
                    asp-controller="AdminBlogPosts"
                    asp-action="Delete"
                    >Delete
                </button>
            </div>
        </form>
    }
    else
    {
        <p>No blog post found</p>
    }
</div>


<!-- Javascript for text editor -->
@section Scripts{
    <script>
        //initialize FroalaEditor
        //in (), give id we want to convert into editor (content in this case)
        var editor = new FroalaEditor('#content',{
                imageUploadURL: '/api/images'
            });

        //for featured image upload
        //eventlistener, listen to featured image upload change
        var featuredUploadElement = document.getElementById('featuredImageUpload');

        //featuredImageURL
        var featuredImageURLElement = document.getElementById('featuredImageUrl');

        //for thumbnail
        var imageThumbnail = document.getElementById('featuredImageDisplay');

        async function uploadFeaturedImage(e) {

            let data = new FormData();
            data.append('file', e.target.files[0]);

            //now upload this data using fetch
            //uses POST, accept everything
            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Accept': '*/*'
                },
                body: data
            }).then(response => response.json())    //convert response to json
                .then(result => {   //result has link to image in cloudinary

                    //so change value of featuredImageURL with cloudinary link
                    featuredImageURLElement.value = result.link;
                    imageThumbnail.src = result.link;
                    imageThumbnail.style.display = 'block'; //display to screen
                });

        }

        featuredUploadElement.addEventListener('change', uploadFeaturedImage);  //function that will be called when it change

    </script>
}